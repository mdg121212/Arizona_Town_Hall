/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import com.squareup.moshi.Json

/**
 *
 * @param Id Unique contact identifier.
 * @param Url
 * @param FirstName Shortcut for custom field value with system code 'FirstName'
 * @param LastName Shortcut for custom field value with system code 'LastName'
 * @param Organization Shortcut for custom field value with system code 'Organization'
 * @param Email Contact primary email, shortcut for custom field value with system code 'Email'. Should be unique in account.
 * @param DisplayName Combination of names or organization or email. Value depends on presence of values. It could be used to display contact record on lists.
 * @param ProfileLastUpdated Timestamp of last contact details modification. Complies with ISO8601 format. The date and time that common fields, membership fields, or member group participation were last updated for the contact.
 * @param MembershipLevel
 * @param MembershipEnabled Indicates whether the contact is a member. A value of false indicates that the contact is a not a member or is a suspended member.
 * @param Status The status of the contact's membership. The status is only included in the results if the contact is a member.
 * @param IsAccountAdministrator Indicates if the contact is an account administrator.
 * @param TermsOfUseAccepted Indicates if the contact already accepted Wild Apricot's terms of use.
 * @param FieldValues For each custom field you have added to your Wild Apricot database, the name of the field, its system code, and its value for this contact are returned. The system code is a unique field identifier that can be used instead of the field name to identify the field. As well, a number of system fields are returned. If a custom field is restricted to certain access levels, then CustomAccessLevel indicates the level to which the field is restricted. Possible values are AdminOnly, Member, and Public.
 */
data class Contact(
    /* Unique contact identifier. */
    val Id: kotlin.Int? = null,
    val Url: ResourceUrl? = null,
    /* Shortcut for custom field value with system code 'FirstName' */
    val FirstName: kotlin.String? = null,
    /* Shortcut for custom field value with system code 'LastName' */
    val LastName: kotlin.String? = null,
    /* Shortcut for custom field value with system code 'Organization' */
    val Organization: kotlin.String? = null,
    /* Contact primary email, shortcut for custom field value with system code 'Email'. Should be unique in account. */
    val Email: kotlin.String? = null,
    /* Combination of names or organization or email. Value depends on presence of values. It could be used to display contact record on lists. */
    val DisplayName: kotlin.String? = null,
    /* Timestamp of last contact details modification. Complies with ISO8601 format. The date and time that common fields, membership fields, or member group participation were last updated for the contact. */
    val ProfileLastUpdated: java.time.LocalDateTime? = null,
    val MembershipLevel: BundleAdministrator? = null,
    /* Indicates whether the contact is a member. A value of false indicates that the contact is a not a member or is a suspended member. */
    val MembershipEnabled: kotlin.Boolean? = null,
    /* The status of the contact's membership. The status is only included in the results if the contact is a member. */
    val status: Contact.Status? = null,
    /* Indicates if the contact is an account administrator. */
    val IsAccountAdministrator: kotlin.Boolean? = null,
    /* Indicates if the contact already accepted Wild Apricot's terms of use. */
    val TermsOfUseAccepted: kotlin.Boolean? = null,
    /* For each custom field you have added to your Wild Apricot database, the name of the field, its system code, and its value for this contact are returned. The system code is a unique field identifier that can be used instead of the field name to identify the field. As well, a number of system fields are returned. If a custom field is restricted to certain access levels, then CustomAccessLevel indicates the level to which the field is restricted. Possible values are AdminOnly, Member, and Public. */
    val FieldValues: kotlin.Array<ContactFieldValue>? = null
) {

    /**
     * The status of the contact's membership. The status is only included in the results if the contact is a member.
     * Values: active,lapsed,pendingNew,pendingRenewal,pendingUpgrade
     */
    enum class Status(val value: kotlin.String) {

        @Json(name = "Active")
        active("Active"),

        @Json(name = "Lapsed")
        lapsed("Lapsed"),

        @Json(name = "PendingNew")
        pendingNew("PendingNew"),

        @Json(name = "PendingRenewal")
        pendingRenewal("PendingRenewal"),

        @Json(name = "PendingUpgrade")
        pendingUpgrade("PendingUpgrade");

    }

}

