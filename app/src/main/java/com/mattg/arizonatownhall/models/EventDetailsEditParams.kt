/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

/**
 *
 * @param DescriptionHtml Full event description in HTML format.
 * @param PaymentInstructions A description how attendee can pay for attendance in this event. Payment instructions for this event only.
 * @param TimeZone
 * @param AccessControl
 * @param GuestRegistrationSettings
 * @param Organizer
 * @param PaymentMethod
 * @param RegistrationConfirmationExtraInfo Additional event information to be inserted in registration confirmation email
 * @param RegistrationMessage This text will be shown above Register button on Event details
 * @param SendEmailCopy Indicates if email copy should be sent according to email routing setting.
 * @param IsWaitlistEnabled Indicates if waitlist feature is enabled to the event.
 * @param WaitlistSettings
 * @param MultipleRegistrationAllowed Indicates if it is allowed to have multiple registrations for the same contact.
 * @param AttendeesDisplaySettings
 */
data class EventDetailsEditParams(
    /* Full event description in HTML format. */
    val DescriptionHtml: kotlin.String? = null,
    /* A description how attendee can pay for attendance in this event. Payment instructions for this event only. */
    val PaymentInstructions: kotlin.String? = null,
    val TimeZone: TimeZone? = null,
    val AccessControl: EventAccessControl? = null,
    val GuestRegistrationSettings: EventGuestRegistrationSettings? = null,
    val Organizer: EventDetailsEditParamsOrganizer? = null,
    val PaymentMethod: EventPaymentMethodType? = null,
    /* Additional event information to be inserted in registration confirmation email */
    val RegistrationConfirmationExtraInfo: kotlin.String? = null,
    /* This text will be shown above Register button on Event details */
    val RegistrationMessage: kotlin.String? = null,
    /* Indicates if email copy should be sent according to email routing setting. */
    val SendEmailCopy: kotlin.Boolean? = null,
    /* Indicates if waitlist feature is enabled to the event. */
    val IsWaitlistEnabled: kotlin.Boolean? = null,
    val WaitlistSettings: EventWaitlistSettings? = null,
    /* Indicates if it is allowed to have multiple registrations for the same contact. */
    val MultipleRegistrationAllowed: kotlin.Boolean? = null,
    val AttendeesDisplaySettings: EventAttendeesDisplaySettings? = null
) {

}

