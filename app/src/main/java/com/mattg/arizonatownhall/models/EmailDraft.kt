/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

/**
 *
 * @param Id Unique email draft identifier.
 * @param Url
 * @param CreatedDate Date and time when the draft was created.
 * @param Type
 * @param Subject Value for email subject. It may contain macros, which will be replaced before delivery.
 * @param Body Value for email body. Usually it is HTML content with macros, which will be replaced before delivery.
 * @param ReplyToName Display name for reply to
 * @param ReplyToAddress Email address to use as reply to.
 * @param EventId Event identifier for which the draft has been started (if any).
 * @param Creator
 * @param IsLinkTrackingAllowed Indicates if email tracking is enabled for this email.
 * @param Recipients
 * @param LastChangedDate Date and time when the draft was last modified.
 * @param Modifier
 * @param IsScheduled Indicates if draft delivery is scheduled for a particular date. See ScheduledDate value.
 * @param ScheduledDate Date and time when the draft will be sent.
 */
data class EmailDraft(
    /* Unique email draft identifier. */
    val Id: kotlin.Int? = null,
    val Url: ResourceUrl? = null,
    /* Date and time when the draft was created. */
    val CreatedDate: kotlin.String? = null,
    val Type: EmailDraftType? = null,
    /* Value for email subject. It may contain macros, which will be replaced before delivery.  */
    val Subject: kotlin.String? = null,
    /* Value for email body. Usually it is HTML content with macros, which will be replaced before delivery.  */
    val Body: kotlin.String? = null,
    /* Display name for reply to */
    val ReplyToName: kotlin.String? = null,
    /* Email address to use as reply to. */
    val ReplyToAddress: kotlin.String? = null,
    /* Event identifier for which the draft has been started (if any). */
    val EventId: kotlin.Int? = null,
    val Creator: ShortContact? = null,
    /* Indicates if email tracking is enabled for this email. */
    val IsLinkTrackingAllowed: kotlin.Boolean? = null,
    val Recipients: EmailRecipients? = null,
    /* Date and time when the draft was last modified. */
    val LastChangedDate: kotlin.String? = null,
    val Modifier: ShortContact? = null,
    /* Indicates if draft delivery is scheduled for a particular date. See ScheduledDate value. */
    val IsScheduled: kotlin.Boolean? = null,
    /* Date and time when the draft will be sent. */
    val ScheduledDate: kotlin.String? = null
) {

}

