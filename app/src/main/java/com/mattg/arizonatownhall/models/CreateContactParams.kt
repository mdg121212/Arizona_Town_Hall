/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import com.squareup.moshi.Json

/**
 *
 * @param FirstName Shortcut for custom field with system code 'FirstName'
 * @param LastName Shortcut for custom field with system code 'LastName'
 * @param Organization Shortcut for custom field with system code 'Organization'
 * @param Email Contact primary email, shortcut for custom field with system code 'Email'. Should be unique in account.
 * @param MembershipLevel
 * @param MembershipEnabled Indicates whether the contact has membership. False means that the contact is a not a member or the membership is suspended.
 * @param Status The status of the membership. The status is only included in the results if the contact is a member.
 * @param Password New password to assign. If you don't want to change password, just skip this field.
 * @param FieldValues An array of field values to assign to contact.
 * @param RecreateInvoice Indicates whether to create invoice is required. Default value is **TRUE**
 */
data class CreateContactParams(
    /* Shortcut for custom field with system code 'FirstName' */
    val FirstName: kotlin.String? = null,
    /* Shortcut for custom field with system code 'LastName' */
    val LastName: kotlin.String? = null,
    /* Shortcut for custom field with system code 'Organization' */
    val Organization: kotlin.String? = null,
    /* Contact primary email, shortcut for custom field with system code 'Email'. Should be unique in account. */
    val Email: kotlin.String? = null,
    val MembershipLevel: CreateContactParamsMembershipLevel? = null,
    /* Indicates whether the contact has membership. False means that the contact is a not a member or the membership is suspended. */
    val MembershipEnabled: kotlin.Boolean? = null,
    /* The status of the membership. The status is only included in the results if the contact is a member. */
    val status: CreateContactParams.Status? = null,
    /* New password to assign. If you don't want to change password, just skip this field. */
    val Password: kotlin.String? = null,
    /* An array of field values to assign to contact. */
    val FieldValues: kotlin.Array<FieldValue>? = null,
    /* Indicates whether to create invoice is required. Default value is **TRUE** */
    val RecreateInvoice: kotlin.Boolean? = null
) {

    /**
     * The status of the membership. The status is only included in the results if the contact is a member.
     * Values: active,lapsed,pendingNew,pendingRenewal,pendingUpgrade
     */
    enum class Status(val value: kotlin.String) {

        @Json(name = "Active")
        active("Active"),

        @Json(name = "Lapsed")
        lapsed("Lapsed"),

        @Json(name = "PendingNew")
        pendingNew("PendingNew"),

        @Json(name = "PendingRenewal")
        pendingRenewal("PendingRenewal"),

        @Json(name = "PendingUpgrade")
        pendingUpgrade("PendingUpgrade");

    }

}

