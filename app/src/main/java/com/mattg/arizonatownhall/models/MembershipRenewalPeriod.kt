/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import com.squareup.moshi.Json

/**
 * Describes membership renewal period.
 * @param Kind Period of renewal.
 * @param StartFromJoinDate Indicates if renewal period starts from join date. Otherwise, starts from dates specified in Dates field.
 * @param Dates Collection of renewal dates during a year.
 * @param AutomaticRecurringPayments Indicates if recurring payments will be charged automatically.
 * @param ApplicationReview
 */
data class MembershipRenewalPeriod(
    /* Period of renewal. */
    val kind: MembershipRenewalPeriod.Kind? = null,
    /* Indicates if renewal period starts from join date. Otherwise, starts from dates specified in Dates field. */
    val StartFromJoinDate: kotlin.Boolean? = null,
    /* Collection of renewal dates during a year. */
    val Dates: kotlin.Array<MembershipRenewalPeriodDates>? = null,
    /* Indicates if recurring payments will be charged automatically. */
    val AutomaticRecurringPayments: kotlin.Boolean? = null,
    val ApplicationReview: MembershipRenewalPeriodApplicationReview? = null
) {

    /**
     * Period of renewal.
     * Values: never,monthly,quarterly,twiceAYear,everyNYears
     */
    enum class Kind(val value: kotlin.String) {

        @Json(name = "Never")
        never("Never"),

        @Json(name = "Monthly")
        monthly("Monthly"),

        @Json(name = "Quarterly")
        quarterly("Quarterly"),

        @Json(name = "TwiceAYear")
        twiceAYear("TwiceAYear"),

        @Json(name = "EveryNYears")
        everyNYears("EveryNYears");

    }

}

