/**
 * Wild Apricot Admin API
 *  This is Wild Apricot's API for administrators. You can use it if you already have a Wild Apricot account (typically with a website on  *.wildapricot.org). Otherwise, please use https://register.wildapricot.com to create a new account.  If you have any questions about this API, please contact our support team at support@wildapricot.com.
 *
 * OpenAPI spec version: 7.14.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

/**
 *
 * @param ContactIdentifiers List of contact identifiers that match request criteria. The field appears only if idsOnly parameter was passed in request.
 * @param Count Number of contacts that match request criteria. This field appears only if $count parameter was passed in request.
 * @param Contacts List of contacts that match request criteria.
 */
data class ContactsResponse(
    /* List of contact identifiers that match request criteria. The field appears only if idsOnly parameter was passed in request. */
    val ContactIdentifiers: kotlin.Array<kotlin.Int>? = null,
    /* Number of contacts that match request criteria. This field appears only if $count parameter was passed in request. */
    val Count: kotlin.Int? = null,
    /* List of contacts that match request criteria. */
    val Contacts: kotlin.Array<Contact>? = null,
    /* List of contact identifiers that match request criteria. The field appears only if idsOnly parameter was passed in request. */
    /* Unique result identifier. */
    val ResultId: kotlin.String? = null,
    /* URL to check async result availability. We expect that client application will check this URL with some small delay (every 5 sec) until API returns a list of contacts or ProcessingState==Failed. */
    val ResultUrl: kotlin.String? = null,
    /* Date and time when the request was queued for processing. */
    val Requested: kotlin.String? = null,
    /* Date and time when the request was processed. */
    val Processed: kotlin.String? = null,
    /* Asynchronous request state. It starts from Waiting, then server process it. Request may end in one of final states: Complete or Failed. */
    val InitialQuery: ContactsAsyncResponseInitialQuery? = null,
    /* In case of error, provides description of error occured. */
    val ErrorDetails: kotlin.String? = null,


    ) {

}

